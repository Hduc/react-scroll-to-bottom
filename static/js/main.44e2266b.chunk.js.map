{"version":3,"sources":["../../src/index.js","../../../../src/hooks/internal/useStateContext.js","../../../../src/hooks/internal/useFunctionContext.js","../../../src/ScrollToBottom/FunctionContext.js","../../../src/ScrollToBottom/StateContext.js","../../../../src/hooks/internal/useStyleToClassName.js","../../../src/ScrollToBottom/InternalContext.js","../../../src/ScrollToBottom/AutoHideFollowButton.js","../../../src/hooks/useScrollToEnd.js","../../../src/hooks/useSticky.js","../../../../src/hooks/internal/useInternalContext.js","../../../src/ScrollToBottom/Composer.js","../../../src/ScrollToBottom/Panel.js","../../src/addVersionToMetaTag.js","../../src/BasicScrollToBottom.js","../../src/createCSSKey.js","../../src/EventSpy.js","../../src/debounce.js","../../src/SpineTo.js","../../../src/hooks/useAnimating.js","../../../src/hooks/useAnimatingToEnd.js","../../../src/hooks/useAtBottom.js","../../../src/hooks/useAtEnd.js","../../../src/hooks/useAtStart.js","../../../src/hooks/useAtTop.js","../../../src/hooks/useMode.js","../../../src/hooks/useObserveScrollPosition.js","../../../src/hooks/useScrollTo.js","../../../src/hooks/useScrollToBottom.js","../../../src/hooks/useScrollToStart.js","../../../src/hooks/useScrollToTop.js","CommandBar.js","App.js","registerServiceWorker.js","index.js"],"names":["BasicScrollToBottom","useContext","StateContext","FunctionContext","context","scrollTo","scrollToBottom","scrollToEnd","scrollToStart","scrollToTop","animating","animatingToEnd","atBottom","atEnd","atStart","atTop","mode","sticky","offsetHeight","scrollHeight","setTarget","styleToClassName","ROOT_STYLE","backgroundColor","borderRadius","borderWidth","bottom","cursor","height","outline","position","right","width","AutoHideFollowButton","children","className","rootCSS","onClick","type","PropTypes","string","InternalContext","emotionPool","computeViewState","target","scrollTop","isEnd","Composer","checkInterval","debounce","nonce","ignoreScrollEventBeforeRef","useRef","useState","setScrollTop","setOffsetHeight","setScrollHeight","setAnimating","setAtBottom","setAtEnd","setAtTop","setAtStart","setSticky","scrollPositionObserversRef","observeScrollPosition","useCallback","fn","scrollPositionObservers","index","handleScrollEnd","Date","behavior","console","options","useEffect","stickyButNotAtEndSince","timeout","ms","Math","setInterval","clearInterval","handleScroll","timeStampLow","nextOffsetHeight","nextScrollHeight","offsetHeightChanged","scrollHeightChanged","actualScrollTop","observer","useMemo","emotion","key","style","internalContext","stateContext","functionContext","handleFocus","capture","passive","value","name","onEvent","onEnd","undefined","overflowY","Panel","ref","content","document","meta","encodeURI","err","setMetaTag","BasicScrollToBottomCore","followButtonClassName","scrollViewClassName","String","EventSpy","onEventRef","debouncer","event","current","handleEvent","useLayoutEffect","last","args","now","clearTimeout","setTimeout","squareStepper","to","sign","next","step","from","stepper","i","SpineTo","animator","animate","start","cancelAnimationFrame","requestAnimationFrame","toNumber","nextValue","handleCancelAnimation","isRequired","deps","Array","boxShadow","display","listStyleType","margin","padding","paddingBottom","marginLeft","alignItems","flex","fontFamily","fontSize","justifyContent","textAlign","color","CommandBar","createEmotion","css","scrollTopRef","useAnimating","useAtBottom","useAtEnd","useAtStart","useAtTop","useMode","useSticky","useScrollTo","useScrollToBottom","useScrollToEnd","useScrollToStart","useScrollToTop","handleScrollTo100pxClick","handleScrollToBottomClick","handleScrollToEndClick","handleScrollToStartClick","handleScrollToTopClick","useObserveScrollPosition","innerText","classNames","lit","FADE_IN_ANIMATION_KEYFRAMES","opacity","marginRight","CONTAINER_STYLE","borderColor","borderStyle","marginTop","LARGE_CONTAINER_STYLE","SCROLL_VIEW_STYLE","SCROLL_VIEW_PADDING_STYLE","paddingLeft","paddingRight","SMALL_CONTAINER_STYLE","createParagraphs","count","fill","map","loremIpsum","units","App","keyframes","containerCSS","largeContainerCSS","scrollViewCSS","scrollViewPaddingCSS","animation","smallContainerCSS","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","querySelector","getAttribute","loadedVersion","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleClear","handleCommandBarVisibleChange","checked","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","containerClassName","handleKeyDown","keyCode","window","location","reload","addEventListener","removeEventListener","onChange","Consumer","paragraph","startsWith","substr","reverse","callback","enabled","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"80DAAA,eAEA,WACA,WACA,WACA,WACA,WACA,WAEA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,W,yDAEeA,U,aAwBf,gB,0FC5Ce,WACb,OAAO,IAAAC,YAAWC,EAAlB,UALF,I,EAAA,OAEA,G,EAAA,Q,qHCEe,WACb,OAAO,IAAAD,YAAWE,EAAlB,UALF,I,EAAA,OAEA,G,EAAA,Q,+DCFA,I,oEAEA,IAAMC,I,EAFN,O,4BAEgB,sBAAoB,CAClCC,SAAU,qBACVC,eAAgB,qBAChBC,YAAa,qBACbC,cAAe,qBACfC,YAAa,uBAGfL,8C,MAEeA,E,0CCZf,I,oEAEA,IAAMA,I,EAFN,O,4BAEgB,sBAAoB,CAClCM,WADkC,EAElCC,gBAFkC,EAGlCC,UAHkC,EAIlCC,OAJkC,EAKlCC,SALkC,EAMlCC,OANkC,EAOlCC,KAPkC,SAQlCC,QAAQ,IAGVb,2C,MAEeA,E,qGCbA,WAGb,OAF6B,IADe,6BAF9C,I,EAAA,G,EAAA,Q,yDCAA,I,oEAEA,IAAMA,I,EAFN,O,4BAEgB,sBAAoB,CAClCc,aADkC,EAElCC,aAFkC,EAGlCC,UAAW,qBACXC,iBAAkB,uBAGpBjB,8C,MAEeA,E,iHCXf,eACA,UACA,UAEA,WACA,WACA,W,4/BAEA,IAAMkB,EAAa,CACjBC,gBADiB,oBAEjBC,aAFiB,GAGjBC,YAHiB,EAIjBC,OAJiB,EAKjBC,OALiB,UAMjBC,OANiB,GAOjBC,QAPiB,EAQjBC,SARiB,WASjBC,MATiB,GAUjBC,MAViB,GAYjB,UAAW,CACTT,gBAAiB,qBAGnB,WAAY,CACVA,gBAAiB,sBAIfU,EAAuB,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACjClB,EADiD,GACvC,IADuC,iBAElDmB,GAAU,eAAhB,GACM7B,GAAc,IAApB,WAEA,OACGU,GACC,kCAAQkB,WAAW,gBAAqBA,GAAD,IAAvC,IAAgEE,QAAhE,EAAsFC,KAAK,UAF/F,IASFL,eAAoC,CAClCC,cADkC,EAElCC,UAAW,IAGbF,YAAiC,CAC/BC,SAAUK,UADqB,IAE/BJ,UAAWI,UAAUC,Q,MAGRP,E,qGCnDA,WAGb,OAFwB,IADe,wBAFzC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFY,IADe,oBAFpC,I,EAAA,G,EAAA,O,oHCIe,WACb,OAAO,IAAAhC,YAAWwC,EAAlB,UALF,I,EAAA,OAEA,G,EAAA,Q,mWCFA,eACA,UACA,E,oaAAA,OAEA,WACA,WACA,WACA,WACA,WACA,W,smCAEA,IAQMC,EAAN,GAQA,SAASC,EAAiB,GAA6D,IAA3D3B,EAA2D,EAA3DA,KAA2D,IAArD4B,OAAU1B,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAAc0B,EAAe,EAAfA,UAChEjC,EAAWO,MAdnB,EAeQJ,EAAQ8B,EAfhB,EAoBE,MAAO,CACLjC,SADK,EAELC,MAvBJ,QAkBgBG,IAAd,EAMEF,QAxBJ,QAmBkBE,IAAhB,EAMED,SAIJ,SAAS+B,EAAMD,EAAW7B,GACxB,MA9BF,QA8BUA,GAAD,IAAsB6B,GA/B/B,WA+BoD7B,GAAlD,SAA0E6B,EAG5E,IAAME,EAAW,SAAC,GAAuD,IAArDC,EAAqD,EAArDA,cAAed,EAAsC,EAAtCA,SAAUe,EAA4B,EAA5BA,SAAUjC,EAAkB,EAAlBA,KAAMkC,EAAY,EAAZA,MAC3DlC,EAlCF,QAkCSA,EAlCT,MADA,SAqCE,IAAMmC,GAA6B,IAAAC,QAAnC,GAHuE,KAIrC,IAAAC,UArCpC,QAqC6CrC,IAJ4B,WAIhE6B,EAJgE,KAIrDS,EAJqD,UAK3C,IAAAD,UAL2C,SAKhET,EALgE,KAKxDxB,EALwD,UAQ/B,IAAAiC,UAR+B,MAQhEnC,EARgE,KAQlDqC,EARkD,UAS/B,IAAAF,UAT+B,MAShElC,EATgE,KASlDqC,EATkD,UAYrC,IAAAH,WAZqC,MAYhE3C,EAZgE,KAYrD+C,EAZqD,UAavC,IAAAJ,WAbuC,MAahEzC,EAbgE,KAatD8C,EAbsD,UAc7C,IAAAL,WAd6C,MAchExC,EAdgE,KAczD8C,EAdyD,UAe7C,IAAAN,WAf6C,MAehEtC,EAfgE,KAezD6C,EAfyD,UAgBzC,IAAAP,WAhByC,MAgBhEvC,EAhBgE,KAgBvD+C,EAhBuD,UAiB3C,IAAAR,WAjB2C,MAiBhEpC,EAjBgE,KAiBxD6C,EAjBwD,KAoBjEC,GAA6B,IAAAX,QAAnC,IACMY,GAAwB,IAAAC,cAC5B,SAAAC,GAIE,OAHAH,kBACAnB,GAAUsB,EAAG,CAAErB,UAAWD,EAAOC,YAE1B,WAAM,IACMsB,EAA4BJ,EADlC,QAELK,EAAQD,UAAd,IAEA,GAAUA,WAAV,MAGJ,CAACJ,EAZH,IAeMM,GAAkB,IAAAJ,cAAY,WAClCd,UAAqCmB,KAArCnB,MACAM,MACAH,UACC,CAACH,EAA4BM,EAxCuC,IA2CjEpD,GAAW,IAAA4D,cACf,YAAkC,6DAAP,GAAbM,EAAoB,EAApBA,SACZ,SAAIA,GAEFF,IAGAzB,YAAmBC,WAAuBD,eAAsBA,EAA7CC,aAAnBD,IAEA2B,cACEC,aADFD,4MAKAd,MACAH,QAGJ,CAACe,EAAiBZ,EAAcH,EAlBlC,IAqBMhD,GAAiB,IAAA2D,cACrB,WAAuB,6DAAP,GAAbM,EAAoB,EAApBA,SACDA,cACEC,aADFD,kNAKAlE,EAAS,OAAQ,CAAEkE,SAAUA,GAAY,aAE3C,CATF,IAYM9D,IAAc,IAAAwD,cAClB,WAAuB,6DAAP,GAAbM,EAAoB,EAApBA,SACDA,cACEC,aADFD,+MAKAlE,EAAS,EAAG,CAAEkE,SAAUA,GAAY,aAEtC,CATF,IAYMhE,IAAc,IAAA0D,cAClB,WAAuB,6DAAP,GAAbM,EAAoB,EAApBA,SACDA,cACEC,aADFD,+MAKA,IAAME,EAAU,CAAEF,SAAUA,GAAY,UAhI9C,QAkIMvD,EAAoBP,GAApBO,GAA2CV,EAA3CU,KAEF,CAACA,EAAMV,EAXT,KAcME,IAAgB,IAAAyD,cACpB,WAAuB,6DAAP,GAAbM,EAAoB,EAApBA,SACDA,cACEC,aADFD,iNAKA,IAAME,EAAU,CAAEF,SAAUA,GAAY,UA9I9C,QAgJMvD,EAAoBV,EAApBU,GAA8CP,GAA9CO,KAEF,CAACA,EAAMV,EAXT,MAcA,IAAAoE,YAAU,WACR,KAAY,CACV,IAAIC,GAAJ,EAEMC,GAjJkBV,EAiJa,WAC/BjD,OAAqB0B,EAAiB,CAAE3B,KAAF,EAAQ4B,WAAlD,MACE,EAEW0B,aA3JrB,MAmKY,GAAc/D,GAAY,CAAEgE,SAAU,WACtCI,MAVAA,EAAyBL,KAAzBK,MAaFA,MAjKwBE,EAmKzBC,SA7KT,GA6KSA,IA7KT,GAWEZ,IAEOa,YAAYb,EAAnB,IAkKI,OAAO,kBAAMc,cAAN,IArKb,IAA8Bd,EAAIW,IAuK7B,CAACnE,EAAWsC,EAAehC,EAAMT,GAAaU,EA1BjD,IA4BA,IAAMgE,IAAe,IAAAhB,cACnB,YAKE,KALoB,EAAnBiB,cAKmB/B,EAApB,UAQA,EAAY,OACkCR,EAAiB,CAAE3B,KAAF,EAAQ4B,WAA7DhC,EADE,WACQC,EADR,QACeC,EADf,UACwBC,EADxB,QAGV2C,KACAC,KACAE,KACAD,EANU,OAYYuB,EAAqDvC,EAZjE,aAY4CwC,EAAqBxC,EAZjE,aAaJyC,EAAsBF,IAA5B,EACMG,EAAsBF,IAA5B,EAEAC,GAAuB9B,EAAvB8B,GACAC,GAAuB9B,EAjBb,IAwBV,OAEEM,EAGGpD,GAAaoC,EAAMD,EAApB,IA7BM,GAkCVA,UAAsBY,GAAtBZ,GAlCU,IAoCS0C,EAAoB3C,EApC7B,UAsCVmB,mBAA2C,SAAAyB,GAAQ,OAAIA,EAAS,CAAE3C,UAAW0C,UAGjF,CAAC,EAAD,4BAvDF,IA2EMlE,IAAmB,IAAAoE,UAAQ,WAC/B,IAAMC,EACJhD,EAAA,KAAuBA,MAAqB,aAAc,CAAEiD,IAAK,+BAAF,QAAiC,IAAtC,YAAwDzC,WAEpH,OAAO,SAAA0C,GAAK,OAAIF,SAAJ,MACX,CALH,IAOMG,IAAkB,IAAAJ,UACtB,iBAAO,CACLzB,sBADK,EAEL9C,aAFK,EAGLC,aAHK,EAILC,UAJK,EAKLC,uBAEF,CAAC2C,EAAuB9C,EAAcC,EAAcC,EARtD,KAWMT,GAAiBD,GAAaoC,EAAMD,EAA1C,GAEMiD,IAAe,IAAAL,UACnB,iBAAO,CACL/E,UADK,EAELC,eAFK,GAGLC,SAHK,EAILC,MAJK,EAKLC,QALK,EAMLC,MANK,EAOLC,KAPK,EAQLC,YAEF,CAACP,EAAWC,GAAgBC,EAAUC,EAAOC,EAASC,EAAOC,EAX/D,IAcM+E,IAAkB,IAAAN,UACtB,iBAAO,CACLpF,SADK,EAELC,eAFK,EAGLC,YAHK,GAILC,cAJK,GAKLC,kBAEF,CAACJ,EAAUC,EAAgBC,GAAaC,GAR1C,KAwCA,OA7BA,IAAAkE,YAAU,WAoBR,KAAY,CACV,IAAMsB,EAAc,kBAAMxC,EAAgBZ,EAAtB,eAIpB,OAFAA,6BAA8C,CAAEqD,SAAF,EAAiBC,SAAS,IAEjE,kBAAMtD,8BAAN,OAER,CA3BH,IA8BE,wBAAC,EAAD,kBAA0BuD,MAAON,IAC/B,wBAAC,EAAD,kBAA0BM,MAAOJ,IAC/B,wBAAC,EAAD,kBAAuBI,MAAOL,IAA9B,EAEGlD,GAAU,wBAAC,EAAD,SAAUK,SAAV,EAA8BmD,KAA9B,SAA4CC,QAA5C,GAAmEzD,OAAQA,IACrFA,UAAUC,GACT,wBAAC,EAAD,SAASuD,KAAT,YAA0BE,MAA1B,EAAkD1D,OAAlD,EAAkEuD,MAAOtD,QAQrFE,eAAwB,CACtBC,cADsB,IAEtBd,cAFsB,EAGtBe,SAHsB,GAItBjC,UAJsB,EAKtBkC,WAAOqD,GAGTxD,YAAqB,CACnBC,cAAeT,UADI,OAEnBL,SAAUK,UAFS,IAGnBU,SAAUV,UAHS,OAInBvB,KAAMuB,gBAAgB,CAAC,SAJJ,QAKnBW,MAAOX,UAAUC,Q,MAGJO,E,oVClXf,eACA,UACA,E,oaAAA,OAEA,WACA,W,6JAEA,IAAMzB,EAAa,CACjBM,OADiB,OAEjB4E,UAFiB,OAGjBxE,MAAO,QAGHyE,EAAQ,SAAC,GAA4B,IAA1BvE,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACjBf,GAAc,IAAAnB,YAAWwC,EADQ,mBAEnCL,GAAU,eAAhB,GAEA,OACE,+BAAKD,WAAW,gBAAqBA,GAAD,IAApC,IAA6DuE,IAAKtF,GADpE,IAOFqF,eAAqB,CACnBvE,cADmB,EAEnBC,eAAWoE,GAGbE,YAAkB,CAChBvE,SAAUK,UADM,IAEhBJ,UAAWI,UAAUC,Q,MAGRiE,E,sKChBA,YAff,SAAoBL,EAAMO,GACxB,IAAI,IACMC,EADN,WAGF,GAAwB,qBAAbA,GAA4BA,EAAnC,eAA6DA,EAA7D,MAA8EA,OAAlF,YAA6G,CAC3G,IAAMC,EAAOD,0CAA0CE,UAA1CF,WAAkEA,gBAA/E,QAEAC,yBACAA,4BAEAD,uBAEF,MAAOG,KAITC,CAAW,iCAAXA,Y,mHCnBF,eACA,UACA,UAEA,WACA,WACA,WACA,W,mDAEA,IAAM1F,EAAa,CACjBQ,SAAU,YAGNmF,EAA0B,SAAC,GAAwE,IAAtE/E,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,UAAW+E,EAAiD,EAAjDA,sBAAuBC,EAA0B,EAA1BA,oBACvE/E,GAAU,eAAhB,GAEA,OACE,+BAAKD,WAAW,gBAAqBA,GAAD,IAApB,KACd,wBAAC,EAAD,SAAOA,WAAYgF,GAAD,IAA8B,IADlD,GAEE,wBAAC,EAAD,SAAsBhF,WAAY+E,GAAD,IAAgC,OAKvED,eAAuC,CACrC/E,cADqC,EAErCC,eAFqC,EAGrC+E,2BAHqC,EAIrCC,yBAAqBZ,GAGvBU,YAAoC,CAClC/E,SAAUK,UADwB,IAElCJ,UAAWI,UAFuB,OAGlC2E,sBAAuB3E,UAHW,OAIlC4E,oBAAqB5E,UAAUC,QAGjC,IAAMxC,EAAsB,SAAC,GASvB,IARJgD,EAQI,EARJA,cACAd,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAc,EAKI,EALJA,SACAiE,EAII,EAJJA,sBACAlG,EAGI,EAHJA,KACAkC,EAEI,EAFJA,MACAiE,EACI,EADJA,oBAEA,OACE,wBAAC,EAAD,SAAUnE,cAAV,EAAwCC,SAAxC,EAA4DjC,KAA5D,EAAwEkC,MAAOA,GAC7E,2BACEf,UADF,EAEE+E,sBAFF,EAGEC,oBAAqBA,GAL3B,KAaFnH,eAAmC,CACjCgD,mBADiC,EAEjCd,cAFiC,EAGjCC,eAHiC,EAIjCc,cAJiC,EAKjCiE,2BALiC,EAMjClG,UANiC,EAOjCkC,WAPiC,EAQjCiE,yBAAqBZ,GAGvBvG,YAAgC,CAC9BgD,cAAeT,UADe,OAE9BL,SAAUK,UAFoB,IAG9BJ,UAAWI,UAHmB,OAI9BU,SAAUV,UAJoB,OAK9B2E,sBAAuB3E,UALO,OAM9BvB,KAAMuB,gBAAgB,CAAC,SANO,QAO9BW,MAAOX,UAPuB,OAQ9B4E,oBAAqB5E,UAAUC,Q,MAGlBxC,E,qGCjFA,WACb,OAAO,uDAGW,SAAAmG,GAAK,OAAIiB,oBAAoBjB,gBAAxB,QANzB,I,EAAA,G,EAAA,Q,6HCAA,I,EAAA,OAEA,G,EAAA,Q,2BAEA,IAAMkB,EAAW,SAAC,GAAwC,IAAtCpE,EAAsC,EAAtCA,SAAUmD,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASzD,EAAa,EAAbA,OAGrC0E,GAAa,IAAnB,UAEAA,YAEA,IAAMC,GAAY,IAAA9B,UAChB,kBACE,cAAW,SAAA+B,GAAS,IACVC,EAAYH,EADF,QAGlBG,GAAWA,EAAXA,KAJJ,KAMA,CAACxE,EAPH,IAUMyE,GAAc,IAAAzD,cAClB,SAAAuD,GACEA,eAAqBlD,KAArBkD,MAEAD,OAEF,CANF,IAgBA,OAPA,IAAAI,kBAAgB,WAId,OAHA/E,uBAA2C,CAAEsD,SAAS,IACtDwB,EAAY,CAAE9E,OAAF,EAAUN,KAAM8D,IAErB,kBAAMxD,wBAAN,MACN,CAACwD,EAAMsB,EALV,KAOA,GAGFL,eAAwB,CACtBpE,SAAU,K,MAGGoE,E,qGC5CA,cACb,MACE,SAGF,IAAIO,EAAJ,EACIhD,EAAJ,KAEA,OAAO,WAAa,2BAATiD,EAAS,yBAATA,EAAS,gBAClB,IAAMC,EAAMxD,KAAZ,MAEIwD,IAAJ,GACE5D,kBACA0D,MAEAG,gBAEAnD,EAAUoD,YAAW,WACnB9D,kBACA0D,EAAOtD,KAAPsD,QACC9C,WAAYD,IAHfD,Q,+FCfN,I,EAAA,OACA,G,EAAA,O,2BAEA,SAASqD,EAAcR,EAASS,GAC9B,IAAMC,EAAOrD,UAAUoD,EAAvB,GAEME,EAAOX,EADA3C,UAAUA,SAASoD,EAAhC,IACA,EAEA,OAAIC,EAAJ,EACSrD,WAAP,GAGKA,WAAP,GAGF,SAASuD,EAAKC,EAAMJ,EAAIK,EAASnE,GAG/B,IAFA,IAAIgE,EAAJ,EAESI,EAAT,EAAgBA,EAAhB,EAA2BA,IACzBJ,EAAOG,EAAQH,EAAfA,GAGF,SAGF,IAAMK,EAAU,SAAC,GAAmC,IAAjCrC,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,MAAO1D,EAAoB,EAApBA,OAAQuD,EAAY,EAAZA,MAChCuC,GAAW,IAAjB,UAEMC,GAAU,IAAA1E,cACd,kBAA+C,IAAvB2E,EAAuB,uDAAftE,WAC1B4D,YAAJ,kBAA4BA,IAC1BW,qBAAqBH,EAArBG,SAEAH,UAAmBI,uBAAsB,WACvC,KAAY,CACV,IAAMC,EAAWb,WAAgBtF,eAAsBA,EAAtCsF,aAAjB,EACIc,EAAYX,EAAKC,EAAMS,EAAUd,GAAgB3D,WAAD,GAApD,GAEIQ,SAASiE,EAATjE,GAAJ,MACEkE,KAGFpG,OAEImG,IAAJ,EACEzC,GAASA,GAATA,GAEAqC,EAAQvC,EAAMkC,EAAMJ,EAAI9D,EAAjB,EAAPuE,UAMV,CAACD,EAAUpC,EAzBb,IA4BM2C,GAAwB,IAAAhF,cAAY,WACxC4E,qBAAqBH,EAArBG,SACAvC,GAASA,GAATA,KACC,CAHH,IAsBA,OAjBA,IAAAqB,kBAAgB,WAGd,OAFAgB,EAAQvC,EAAMxD,EAAP,KAAP+F,GAEA,GACE/F,mCAA8D,CAAEsD,SAAS,IACzEtD,6BAAwD,CAAEsD,SAAS,IAE5D,WACLtD,uCACAA,iCACAiG,qBAAqBH,EAArBG,WAIG,kBAAMA,qBAAqBH,EAA3B,YACN,CAACC,EAASD,EAAUO,EAAuB7C,EAAMxD,EAfpD,KAiBA,GAGF6F,YAAoB,CAClBrC,KAAM7D,iBADY,WAElB+D,MAAO/D,UAFW,KAGlBK,OAAQL,cAHU,WAIlB4D,MAAO5D,oBAAoB,CAACA,UAAD,OAAmBA,gBAAgB,CAAvDA,WAAmE2G,Y,MAG7DT,E,qGCxFA,WAGb,MAAO,EAFe,IADe,uBAFvC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFoB,IADe,4BAF5C,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFc,IADe,sBAFtC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFW,IADe,mBAFnC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFa,IADe,qBAFrC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFW,IADe,mBAFnC,I,EAAA,G,EAAA,O,oHCEe,WAGb,MAAO,EAFU,IADe,kBAFlC,I,EAAA,G,EAAA,O,oHCIe,SAAkCjD,GAAqB,IAAX2D,EAAW,uDAAJ,GAChE,oBAAW3D,EACThB,iHACU4E,cAAL,IACL5E,6HAJkE,OASlC,IATkC,WAS5DR,EAT4D,yBAYpE,IAAAU,YAAU,kBAAMc,GAAYxB,EAAlB,KAAV,sBAhBF,I,EAAA,OAEA,G,EAAA,Q,i2BCAe,WAGb,OAFqB,IADe,qBAFtC,I,EAAA,G,EAAA,O,oHCEe,WAGb,OAF2B,IADe,2BAF5C,I,EAAA,G,EAAA,O,oHCEe,WAGb,OAF0B,IADe,0BAF3C,I,EAAA,G,EAAA,O,oHCEe,WAGb,OAFwB,IADe,wBAFzC,I,EAAA,G,EAAA,O,6LCoBM1C,EAAa,CACjBC,gBAAiB,OACjB8H,UAAW,6BAEX,SAAU,CACRC,QAAS,OACTC,cAAe,OACfC,OAAQ,EACRC,QAAS,GAET,gBAAiB,CACfC,cAAe,GAGjB,2BAA4B,CAC1BC,WAAY,IAIhB,mBAAoB,CAClBC,WAAY,SACZrI,gBAAiB,OACjBC,aAAc,EACd8H,QAAS,OACTO,KAAM,EACNC,WAAY,QACZC,SAAU,MACVC,eAAgB,SAChBP,QAAS,UACTQ,UAAW,SAEX,QAAS,CACP1I,gBAAiB,MACjB2I,MAAO,WA0EEC,EArEI,SAAC,GAAe,IAAbjH,EAAY,EAAZA,MACdd,EAAUqD,mBAAQ,kBAAM2E,YAAc,CAAElH,UAASmH,IAAI/I,KAAa,CAAC4B,IAEnEoH,EAAelH,mBAHW,EAIZmH,yBAAb7J,EAJyB,sBAKb8J,wBAAZ5J,EALyB,sBAMhB6J,qBAAT5J,EANyB,sBAOd6J,uBAAX5J,EAPyB,sBAQhB6J,qBAAT5J,EARyB,sBASjB6J,oBAAR5J,EATyB,sBAUf6J,sBAAV5J,EAVyB,oBAY1BZ,EAAWyK,wBACXxK,EAAiByK,8BACjBxK,EAAcyK,2BACdxK,EAAgByK,6BAChBxK,EAAcyK,2BAEdC,EAA2BlH,uBAAY,kBAAM5D,EAAS,IAAK,CAAEkE,SAAU,aAAa,CAAClE,IACrF+K,EAA4BnH,uBAAY,kBAAM3D,EAAe,CAAEiE,SAAU,aAAa,CAACjE,IACvF+K,EAAyBpH,uBAAY,kBAAM1D,EAAY,CAAEgE,SAAU,aAAa,CAAChE,IACjF+K,EAA2BrH,uBAAY,kBAAMzD,EAAc,CAAE+D,SAAU,aAAa,CAAC/D,IACrF+K,EAAyBtH,uBAAY,kBAAMxD,EAAY,CAAE8D,SAAU,aAAa,CAAC9D,IAcvF,OAZA+K,oCACE,YAAoB,IAAjB3I,EAAgB,EAAhBA,UACO4E,EAAY6C,EAAZ7C,QAGJA,IACFA,EAAQgE,UAAY5I,EAAY,QAGpC,CAACyH,IAID,yBAAKnI,UAAWC,EAAU,IACxB,wBAAID,UAAU,WACZ,4BACE,4BAAQE,QAAS+I,GAAjB,qBAEF,4BACE,4BAAQ/I,QAASkJ,GAAjB,kBAEF,4BACE,4BAAQlJ,QAASiJ,GAAjB,oBAEF,4BACE,4BAAQjJ,QAASgJ,GAAjB,kBAEF,4BACE,4BAAQhJ,QAAS8I,GAAjB,UAEF,wBAAIzE,IAAK4D,KAEX,wBAAInI,UAAU,UACZ,wBAAIA,UAAWuJ,IAAW,CAAEC,IAAKjL,KAAjC,aACA,wBAAIyB,UAAWuJ,IAAW,CAAEC,IAAK/K,KAAjC,aACA,wBAAIuB,UAAWuJ,IAAW,CAAEC,IAAK9K,KAAjC,UACA,wBAAIsB,UAAWuJ,IAAW,CAAEC,IAAK7K,KAAjC,YACA,wBAAIqB,UAAWuJ,IAAW,CAAEC,IAAK5K,KAAjC,UACA,wBAAIoB,UAAWuJ,IAAW,CAAEC,IAAc,QAAT3K,KAAjC,mBACA,wBAAImB,UAAWuJ,IAAW,CAAEC,IAAK1K,KAAjC,aChHF2K,EAA8B,CAClC,KAAM,CAAEC,QAAS,IACjB,OAAQ,CAAEA,QAAS,IAGfvK,EAAa,CACjB,oBAAqB,CACnBgI,QAAS,OACTC,cAAe,OACfC,OAAQ,EACRC,QAAS,EAET,0BAA2B,CACzBqC,YAAa,KAIjB,aAAc,CACZxC,QAAS,OAET,QAAS,CACPO,KAAM,GAGR,yBAA0B,CACxBiC,YAAa,KAIjB,eAAgB,CACdpK,OAAQ,GACRI,SAAU,aAIRiK,EAAkB,CACtBC,YAAa,QACbC,YAAa,QACbxK,YAAa,EACbG,OAAQ,IACRsK,UAAW,IAGPC,EAAwB,CAC5BvK,OAAQ,KAGJwK,EAAoB,CACxB7K,gBAAiB,QAGb8K,EAA4B,CAChCC,YAAa,GACbC,aAAc,GAEd,iBAAkB,CAChBhL,gBAAiB,wBAIfiL,EAAwB,CAC5B5K,OAAQ,KAGJ6K,EAAmB,SAAAC,GAAK,OAAI,IAAItD,MAAMsD,GAAOC,OAAOC,KAAI,kBAAMC,qBAAW,CAAEC,MAAO,kBAgMzEC,EA9LH,SAAC,GAAe,IAAb7J,EAAY,EAAZA,MAAY,EAQrBuC,mBAAQ,WAAO,IAAD,EACW2E,YAAc,CAAElH,UAAnCmH,EADQ,EACRA,IAAK2C,EADG,EACHA,UAEb,MAAO,CACLC,aAAc5C,EAAI0B,GAClBmB,kBAAmB7C,EAAI8B,GACvB/J,QAASiI,EAAI/I,GACb6L,cAAe9C,EAAI+B,GACnBgB,qBAAsB/C,EAAI,2BACrBgC,GADoB,IAGvB,QAAS,CACPgB,UAAU,GAAD,OAAKL,EAAUpB,GAAf,cAGb0B,kBAAmBjD,EAAImC,MAExB,CAACtJ,IAvBF+J,EAFuB,EAEvBA,aACAC,EAHuB,EAGvBA,kBACA9K,EAJuB,EAIvBA,QACA+K,EALuB,EAKvBA,cACAC,EANuB,EAMvBA,qBACAE,EAPuB,EAOvBA,kBAPuB,EA2BiBjK,mBAAS,IA3B1B,mBA2BlBkK,EA3BkB,KA2BHC,EA3BG,OA4BqBnK,oBAAS,GA5B9B,mBA4BlBoK,EA5BkB,KA4BDC,EA5BC,OA6BWrK,mBAASoJ,EAAiB,KA7BrC,mBA6BlBkB,EA7BkB,KA6BNC,EA7BM,OA8ByBvK,oBAAS,GA9BlC,mBA8BlBwK,EA9BkB,KA8BCC,EA9BD,OA+BDzK,oBAAS,kBAC/BuD,SAASmH,cAAc,oDAAoDC,aAAa,cADnFC,EA/BkB,oBAmCnBC,EAAYjK,uBAAY,SAAAyI,GAAK,OAAIkB,EAAc,GAAD,mBAAKD,GAAL,YAAoBlB,EAAiBC,QAAU,CACjGiB,EACAC,IAEIO,EAAalK,uBAAY,kBAAMiK,EAAU,KAAI,CAACA,IAC9CE,EAAcnK,uBAAY,kBAAMiK,EAAU,MAAK,CAACA,IAChDG,EAAkBpK,uBACtB,kBAAM2J,EAAc,GAAD,mBAAKD,GAAL,CAAiB,WAAad,qBAAW,CAAEC,MAAO,eACrE,CAACa,EAAYC,IAETU,EAAcrK,uBAAY,kBAAM2J,EAAc,MAAK,CAACA,IACpDW,EAAgCtK,uBAAY,gBAAauK,EAAb,EAAG5L,OAAU4L,QAAb,OAA6BV,EAAqBU,KAAU,CAC5GV,IAEIW,EAA2BxK,uBAAY,kBAAMuJ,EAAiB,WAAU,CAACA,IACzEkB,GAA4BzK,uBAAY,kBAAMuJ,EAAiB,MAAK,CAACA,IACrEmB,GAA2B1K,uBAAY,kBAAMuJ,EAAiB,WAAU,CAACA,IACzEoB,GAA8B3K,uBAClC,gBAAsBwJ,EAAtB,EAAG7K,OAAU4L,QAAb,OAA8Cd,EAAmBD,KACjE,IAEIoB,GAAqBpJ,mBACzB,kBACEiG,IACEuB,EAAe,GACG,UAAlBM,EAA4BD,EAAoB,GAAuB,UAAlBC,EAA4BL,EAAoB,GAAK,MAE9G,CAACD,EAAcM,EAAeL,EAAmBI,IAG7CwB,GAAgB7K,uBACpB,YACE,OADe,EAAd8K,SAEC,KAAK,GACH,OAAOZ,IACT,KAAK,GACH,OAAOC,IACT,KAAK,GACH,OAAOE,IACT,KAAK,GACH,OAAOK,KACT,KAAK,GACH,OAAOD,KACT,KAAK,GACH,OAAOD,IACT,KAAK,GACH,OAAOJ,IACT,KAAK,GACH,OAAOW,OAAOC,SAASC,YAK7B,CACEf,EACAC,EACAC,EACAC,EACAG,EACAC,GACAC,KAUJ,OANAjK,qBAAU,WAGR,OAFAsK,OAAOG,iBAAiB,UAAWL,IAE5B,kBAAME,OAAOI,oBAAoB,UAAWN,OAClD,CAACA,KAGF,yBAAK3M,UAAWC,EAAU,IACxB,wBAAID,UAAU,cACZ,4BACE,4BAAQE,QAAS8L,GAAjB,sBAEF,4BACE,4BAAQ9L,QAAS+L,GAAjB,0BAEF,4BACE,4BAAQ/L,QAASiM,GAAjB,UAEF,4BACE,4BAAQjM,QAASsM,IAAjB,UAEF,4BACE,4BAAQtM,QAASqM,IAAjB,WAEF,4BACE,4BAAQrM,QAASoM,GAAjB,UAEF,4BACE,4BAAQpM,QAASgM,GAAjB,iBAEF,4BACE,+BACE,2BAAOG,QAASf,EAAiB4B,SAAUT,GAA6BtM,KAAK,aAD/E,yBAKF,4BACE,+BACE,2BAAOkM,QAASX,EAAmBwB,SAAUd,EAA+BjM,KAAK,aADnF,sBAMJ,yBAAKH,UAAU,SACb,kBAAC,IAAD,CAAqBA,UAAW0M,GAAoB3L,MAAM,UAAUiE,oBAAqBgG,EAAgB,IACtGU,GAAqB,kBAAC,EAAD,CAAY3K,MAAOA,IACzC,kBAAC,eAAaoM,SAAd,MACG,gBAAGrO,EAAH,EAAGA,OAAH,OACC,yBAAKkB,UAAWuJ,IAAW0B,EAAuB,GAAI,CAAEnM,YACrD0M,EAAWf,KAAI,SAAA2C,GAAS,OACvB,uBAAG5J,IAAK4J,GACLA,EAAUC,WAAW,YACpB,4BAAQlN,KAAK,UAAUiN,EAAUE,OAAO,IAExCF,UAOX1B,GAAqB,kBAAC,EAAD,CAAY3K,MAAOA,KAE3C,kBAAC,IAAD,CAAqBf,UAAW0M,GAAoB7N,KAAK,MAAMkC,MAAM,WAClE2K,GAAqB,kBAAC,EAAD,CAAY3K,MAAOA,IACzC,kBAAC,eAAaoM,SAAd,MACG,gBAAGrO,EAAH,EAAGA,OAAH,OACC,yBAAKkB,UAAWuJ,IAAW0B,EAAuB,GAAI,CAAEnM,YACrD,YAAI0M,GAAY+B,UAAU9C,KAAI,SAAA2C,GAAS,OACtC,uBAAG5J,IAAK4J,GACLA,EAAUC,WAAW,YACpB,4BAAQlN,KAAK,UAAUiN,EAAUE,OAAO,IAExCF,UAOX1B,GAAqB,kBAAC,EAAD,CAAY3K,MAAOA,MAG7C,yBAAKf,UAAU,WACb,wDAA8B8L,GADhC,gBAGCR,GAAmB,kBAAC,IAAD,CAAUkC,SAAUxB,EAAYyB,SAAS,EAAMhL,QAAS,QC1P5EiL,EAAcC,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BrM,QAAQsM,IAAI,6CAKZtM,QAAQsM,IAAI,4CAMrBC,OAAM,SAAAC,GACLxM,QAAQwM,MAAM,4CAA6CA,MC1EjEC,IAASC,OAAO,kBAAC,EAAD,CAAKhO,MAAM,YAAc0D,SAASuK,eAAe,SDelD,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,0BAAwBrC,OAAOC,UAC3CqC,SAAWtC,OAAOC,SAASqC,OAIvC,OAGFtC,OAAOG,iBAAiB,QAAQ,WAC9B,IAAMe,EAAK,UAAMmB,0BAAN,sBAEPxB,IAiDV,SAAiCK,GAE/BqB,MAAMrB,GACHI,MAAK,SAAAkB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BtB,OAAOC,SAASC,eAKpBe,EAAgBC,MAGnBa,OAAM,WACLvM,QAAQsM,IACN,oEArEAiB,CAAwB7B,GAIxBC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjC9L,QAAQsM,IACN,gHAMJb,EAAgBC,OCzCxB8B,K","file":"static/js/main.44e2266b.chunk.js","sourcesContent":["import addVersionToMetaTag from './addVersionToMetaTag';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport BasicScrollToBottom from './BasicScrollToBottom';\nimport Composer from './ScrollToBottom/Composer';\nimport FunctionContext from './ScrollToBottom/FunctionContext';\nimport Panel from './ScrollToBottom/Panel';\nimport StateContext from './ScrollToBottom/StateContext';\n\nimport useAnimating from './hooks/useAnimating';\nimport useAnimatingToEnd from './hooks/useAnimatingToEnd';\nimport useAtBottom from './hooks/useAtBottom';\nimport useAtEnd from './hooks/useAtEnd';\nimport useAtStart from './hooks/useAtStart';\nimport useAtTop from './hooks/useAtTop';\nimport useMode from './hooks/useMode';\nimport useObserveScrollPosition from './hooks/useObserveScrollPosition';\nimport useScrollTo from './hooks/useScrollTo';\nimport useScrollToBottom from './hooks/useScrollToBottom';\nimport useScrollToEnd from './hooks/useScrollToEnd';\nimport useScrollToStart from './hooks/useScrollToStart';\nimport useScrollToTop from './hooks/useScrollToTop';\nimport useSticky from './hooks/useSticky';\n\nexport default BasicScrollToBottom;\n\nexport {\n  AutoHideFollowButton,\n  Composer,\n  FunctionContext,\n  Panel,\n  StateContext,\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n};\n\naddVersionToMetaTag();\n","import { useContext } from 'react';\n\nimport StateContext from '../../ScrollToBottom/StateContext';\n\nexport default function useStateContext() {\n  return useContext(StateContext);\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../../ScrollToBottom/FunctionContext';\n\nexport default function useFunctionContext() {\n  return useContext(FunctionContext);\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  scrollTo: () => 0,\n  scrollToBottom: () => 0,\n  scrollToEnd: () => 0,\n  scrollToStart: () => 0,\n  scrollToTop: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomFunctionContext';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom',\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomStateContext';\n\nexport default context;\n","import useInternalContext from './useInternalContext';\n\nexport default function useStyleToClassName() {\n  const { styleToClassName } = useInternalContext();\n\n  return styleToClassName;\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  offsetHeight: 0,\n  scrollHeight: 0,\n  setTarget: () => 0,\n  styleToClassName: () => ''\n});\n\ncontext.displayName = 'ScrollToBottomInternalContext';\n\nexport default context;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useSticky from '../hooks/useSticky';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  backgroundColor: 'rgba(0, 0, 0, .2)',\n  borderRadius: 10,\n  borderWidth: 0,\n  bottom: 5,\n  cursor: 'pointer',\n  height: 20,\n  outline: 0,\n  position: 'absolute',\n  right: 20,\n  width: 20,\n\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n\n  '&:active': {\n    backgroundColor: 'rgba(0, 0, 0, .6)'\n  }\n};\n\nconst AutoHideFollowButton = ({ children, className }) => {\n  const [sticky] = useSticky();\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n  const scrollToEnd = useScrollToEnd();\n\n  return (\n    !sticky && (\n      <button className={classNames(rootCSS, (className || '') + '')} onClick={scrollToEnd} type=\"button\">\n        {children}\n      </button>\n    )\n  );\n};\n\nAutoHideFollowButton.defaultProps = {\n  children: undefined,\n  className: ''\n};\n\nAutoHideFollowButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default AutoHideFollowButton;\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToEnd() {\n  const { scrollToEnd } = useFunctionContext();\n\n  return scrollToEnd;\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useSticky() {\n  const { sticky } = useStateContext();\n\n  return [sticky];\n}\n","import { useContext } from 'react';\n\nimport InternalContext from '../../ScrollToBottom/InternalContext';\n\nexport default function useInternalContext() {\n  return useContext(InternalContext);\n}\n","import createEmotion from 'create-emotion';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport createCSSKey from '../createCSSKey';\nimport EventSpy from '../EventSpy';\nimport FunctionContext from './FunctionContext';\nimport InternalContext from './InternalContext';\nimport SpineTo from '../SpineTo';\nimport StateContext from './StateContext';\n\nconst MIN_CHECK_INTERVAL = 17; // 1 frame\nconst MODE_BOTTOM = 'bottom';\nconst MODE_TOP = 'top';\nconst NEAR_END_THRESHOLD = 1;\nconst SCROLL_DECISION_DURATION = 34; // 2 frames\n\n// We pool the emotion object by nonce.\n// This is to make sure we don't generate too many unneeded <style> tags.\nconst emotionPool = {};\n\nfunction setImmediateInterval(fn, ms) {\n  fn();\n\n  return setInterval(fn, ms);\n}\n\nfunction computeViewState({ mode, target: { offsetHeight, scrollHeight, scrollTop } }) {\n  const atBottom = scrollHeight - scrollTop - offsetHeight < NEAR_END_THRESHOLD;\n  const atTop = scrollTop < NEAR_END_THRESHOLD;\n\n  const atEnd = mode === MODE_TOP ? atTop : atBottom;\n  const atStart = mode !== MODE_TOP ? atTop : atBottom;\n\n  return {\n    atBottom,\n    atEnd,\n    atStart,\n    atTop\n  };\n}\n\nfunction isEnd(scrollTop, mode) {\n  return (mode === MODE_TOP && scrollTop === 0) || (mode === MODE_BOTTOM && scrollTop === '100%');\n}\n\nconst Composer = ({ checkInterval, children, debounce, mode, nonce }) => {\n  mode = mode === MODE_TOP ? MODE_TOP : MODE_BOTTOM;\n\n  const ignoreScrollEventBeforeRef = useRef(0);\n  const [scrollTop, setScrollTop] = useState(mode === MODE_TOP ? 0 : '100%');\n  const [target, setTarget] = useState(null);\n\n  // Internal context\n  const [offsetHeight, setOffsetHeight] = useState(0);\n  const [scrollHeight, setScrollHeight] = useState(0);\n\n  // State context\n  const [animating, setAnimating] = useState(false);\n  const [atBottom, setAtBottom] = useState(true);\n  const [atEnd, setAtEnd] = useState(true);\n  const [atTop, setAtTop] = useState(true);\n  const [atStart, setAtStart] = useState(false);\n  const [sticky, setSticky] = useState(true);\n\n  // High-rate state context\n  const scrollPositionObserversRef = useRef([]);\n  const observeScrollPosition = useCallback(\n    fn => {\n      scrollPositionObserversRef.current.push(fn);\n      target && fn({ scrollTop: target.scrollTop });\n\n      return () => {\n        const { current: scrollPositionObservers } = scrollPositionObserversRef;\n        const index = scrollPositionObservers.indexOf(fn);\n\n        ~index && scrollPositionObservers.splice(index, 1);\n      };\n    },\n    [scrollPositionObserversRef, target]\n  );\n\n  const handleScrollEnd = useCallback(() => {\n    ignoreScrollEventBeforeRef.current = Date.now();\n    setAnimating(false);\n    setScrollTop(null);\n  }, [ignoreScrollEventBeforeRef, setAnimating, setScrollTop]);\n\n  // Function context\n  const scrollTo = useCallback(\n    (scrollTop, { behavior } = {}) => {\n      if (behavior === 'auto') {\n        // Stop any existing animation\n        handleScrollEnd();\n\n        // Jump to the scroll position\n        target.scrollTop = scrollTop === '100%' ? target.scrollHeight - target.offsetHeight : scrollTop;\n      } else {\n        behavior !== 'smooth' &&\n          console.warn(\n            'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollTo\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n          );\n\n        setAnimating(true);\n        setScrollTop(scrollTop);\n      }\n    },\n    [handleScrollEnd, setAnimating, setScrollTop, target]\n  );\n\n  const scrollToBottom = useCallback(\n    ({ behavior } = {}) => {\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToBottom\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo('100%', { behavior: behavior || 'smooth' });\n    },\n    [scrollTo]\n  );\n\n  const scrollToTop = useCallback(\n    ({ behavior } = {}) => {\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToTop\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo(0, { behavior: behavior || 'smooth' });\n    },\n    [scrollTo]\n  );\n\n  const scrollToEnd = useCallback(\n    ({ behavior } = {}) => {\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToEnd\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToTop(options) : scrollToBottom(options);\n    },\n    [mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToStart = useCallback(\n    ({ behavior } = {}) => {\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToStart\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToBottom(options) : scrollToTop(options);\n    },\n    [mode, scrollToBottom, scrollToTop]\n  );\n\n  useEffect(() => {\n    if (sticky) {\n      let stickyButNotAtEndSince = false;\n\n      const timeout = setImmediateInterval(() => {\n        if (sticky && target && !computeViewState({ mode, target }).atEnd) {\n          if (!stickyButNotAtEndSince) {\n            stickyButNotAtEndSince = Date.now();\n          } else if (Date.now() - stickyButNotAtEndSince > SCROLL_DECISION_DURATION) {\n            // Quirks: In Firefox, after user scroll down, Firefox do two things:\n            //         1. Set to a new \"scrollTop\"\n            //         2. Fire \"scroll\" event\n            //         For what we observed, #1 is fired about 20ms before #2. There is a chance that this stickyCheckTimeout is being scheduled between 1 and 2.\n            //         That means, if we just look at #1 to decide if we should scroll, we will always scroll, in oppose to the user's intention.\n            // Repro: Open Firefox, set checkInterval to a lower number, and try to scroll by dragging the scroll handler. It will jump back.\n\n            !animating && scrollToEnd({ behavior: 'smooth' });\n            stickyButNotAtEndSince = false;\n          }\n        } else {\n          stickyButNotAtEndSince = false;\n        }\n      }, Math.max(MIN_CHECK_INTERVAL, checkInterval) || MIN_CHECK_INTERVAL);\n\n      return () => clearInterval(timeout);\n    }\n  }, [animating, checkInterval, mode, scrollToEnd, sticky, target]);\n\n  const handleScroll = useCallback(\n    ({ timeStampLow }) => {\n      // Currently, there are no reliable way to check if the \"scroll\" event is trigger due to\n      // user gesture, programmatic scrolling, or Chrome-synthesized \"scroll\" event to compensate size change.\n      // Thus, we use our best-effort to guess if it is triggered by user gesture, and disable sticky if it is heading towards the start direction.\n\n      if (timeStampLow <= ignoreScrollEventBeforeRef.current) {\n        // Since we debounce \"scroll\" event, this handler might be called after spineTo.onEnd (a.k.a. artificial scrolling).\n        // We should ignore debounced event fired after scrollEnd, because without skipping them, the userInitiatedScroll calculated below will not be accurate.\n        // Thus, on a fast machine, adding elements super fast will lose the \"stickiness\".\n\n        return;\n      }\n\n      if (target) {\n        const { atBottom, atEnd, atStart, atTop } = computeViewState({ mode, target });\n\n        setAtBottom(atBottom);\n        setAtEnd(atEnd);\n        setAtStart(atStart);\n        setAtTop(atTop);\n\n        // Chrome will emit \"synthetic\" scroll event if the container is resized or an element is added\n        // We need to ignore these \"synthetic\" events\n        // Repro: In playground, press 4-1-5-1-1 (small, add one, normal, add one, add one)\n        //        Nomatter how fast or slow the sequence is being pressed, it should still stick to the bottom\n        const { offsetHeight: nextOffsetHeight, scrollHeight: nextScrollHeight } = target;\n        const offsetHeightChanged = nextOffsetHeight !== offsetHeight;\n        const scrollHeightChanged = nextScrollHeight !== scrollHeight;\n\n        offsetHeightChanged && setOffsetHeight(nextOffsetHeight);\n        scrollHeightChanged && setScrollHeight(nextScrollHeight);\n\n        // Sticky means:\n        // - If it is scrolled programatically, we are still in sticky mode\n        // - If it is scrolled by the user, then sticky means if we are at the end\n\n        // Only update stickiness if the scroll event is not due to synthetic scroll done by Chrome\n        !offsetHeightChanged &&\n          !scrollHeightChanged &&\n          setSticky(\n            // We are sticky if we are animating to the end, or we are already at the end.\n            // We can be \"animating but not sticky\" by calling \"scrollTo(100)\" where the container scrollHeight is 200px.\n            (animating && isEnd(scrollTop, mode)) || atEnd\n          );\n\n        // If no scrollTop is set (not in programmatic scrolling mode), we should set \"animating\" to false\n        // \"animating\" is used to calculate the \"sticky\" property\n        scrollTop === null && setAnimating(false);\n\n        const { scrollTop: actualScrollTop } = target;\n\n        scrollPositionObserversRef.current.forEach(observer => observer({ scrollTop: actualScrollTop }));\n      }\n    },\n    [\n      animating,\n      ignoreScrollEventBeforeRef,\n      mode,\n      offsetHeight,\n      scrollHeight,\n      scrollPositionObserversRef,\n      scrollTop,\n      setAnimating,\n      setAtBottom,\n      setAtEnd,\n      setAtStart,\n      setAtTop,\n      setOffsetHeight,\n      setScrollHeight,\n      setSticky,\n      target\n    ]\n  );\n\n  const styleToClassName = useMemo(() => {\n    const emotion =\n      emotionPool[nonce] || (emotionPool[nonce] = createEmotion({ key: `react-scroll-to-bottom--css-${createCSSKey()}`, nonce }));\n\n    return style => emotion.css(style) + '';\n  }, [nonce]);\n\n  const internalContext = useMemo(\n    () => ({\n      observeScrollPosition,\n      offsetHeight,\n      scrollHeight,\n      setTarget,\n      styleToClassName\n    }),\n    [observeScrollPosition, offsetHeight, scrollHeight, setTarget, styleToClassName]\n  );\n\n  const animatingToEnd = animating && isEnd(scrollTop, mode);\n\n  const stateContext = useMemo(\n    () => ({\n      animating,\n      animatingToEnd,\n      atBottom,\n      atEnd,\n      atStart,\n      atTop,\n      mode,\n      sticky\n    }),\n    [animating, animatingToEnd, atBottom, atEnd, atStart, atTop, mode, sticky]\n  );\n\n  const functionContext = useMemo(\n    () => ({\n      scrollTo,\n      scrollToBottom,\n      scrollToEnd,\n      scrollToStart,\n      scrollToTop\n    }),\n    [scrollTo, scrollToBottom, scrollToEnd, scrollToStart, scrollToTop]\n  );\n\n  useEffect(() => {\n    // We need to update the \"scrollHeight\" value to latest when the user do a focus inside the box.\n    //\n    // This is because:\n    // - In our code that mitigate Chrome synthetic scrolling, that code will look at whether \"scrollHeight\" value is latest or not.\n    // - That code only run on \"scroll\" event.\n    // - That means, on every \"scroll\" event, if the \"scrollHeight\" value is not latest, we will skip modifying the stickiness.\n    // - That means, if the user \"focus\" to an element that cause the scroll view to scroll to the bottom, the user agent will fire \"scroll\" event.\n    //   Since the \"scrollHeight\" is not latest value, this \"scroll\" event will be ignored and stickiness will not be modified.\n    // - That means, if the user \"focus\" to a newly added element that is at the end of the scroll view, the \"scroll to bottom\" button will continue to show.\n    //\n    // Repro in Chrome:\n    // 1. Fill up a scroll view\n    // 2. Scroll up, the \"scroll to bottom\" button should show up\n    // 3. Click \"Add a button\"\n    // 4. Click on the scroll view (to pseudo-focus on it)\n    // 5. Press TAB, the scroll view will be at the bottom\n    //\n    // Expect:\n    // - The \"scroll to bottom\" button should be gone.\n    if (target) {\n      const handleFocus = () => setScrollHeight(target.scrollHeight);\n\n      target.addEventListener('focus', handleFocus, { capture: true, passive: true });\n\n      return () => target.removeEventListener('focus', handleFocus);\n    }\n  }, [target]);\n\n  return (\n    <InternalContext.Provider value={internalContext}>\n      <FunctionContext.Provider value={functionContext}>\n        <StateContext.Provider value={stateContext}>\n          {children}\n          {target && <EventSpy debounce={debounce} name=\"scroll\" onEvent={handleScroll} target={target} />}\n          {target && scrollTop !== null && (\n            <SpineTo name=\"scrollTop\" onEnd={handleScrollEnd} target={target} value={scrollTop} />\n          )}\n        </StateContext.Provider>\n      </FunctionContext.Provider>\n    </InternalContext.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  checkInterval: 100,\n  children: undefined,\n  debounce: 17,\n  mode: undefined,\n  nonce: undefined\n};\n\nComposer.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  debounce: PropTypes.number,\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string\n};\n\nexport default Composer;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n\nimport InternalContext from './InternalContext';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  height: '100%',\n  overflowY: 'auto',\n  width: '100%'\n};\n\nconst Panel = ({ children, className }) => {\n  const { setTarget } = useContext(InternalContext);\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')} ref={setTarget}>\n      {children}\n    </div>\n  );\n};\n\nPanel.defaultProps = {\n  children: undefined,\n  className: undefined\n};\n\nPanel.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default Panel;\n","/* global global:readonly, process:readonly */\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nfunction setMetaTag(name, content) {\n  try {\n    const { document } = global;\n\n    if (typeof document !== 'undefined' && document.createElement && document.head && document.head.appendChild) {\n      const meta = document.querySelector(`html meta[name=\"${encodeURI(name)}\"]`) || document.createElement('meta');\n\n      meta.setAttribute('name', name);\n      meta.setAttribute('content', content);\n\n      document.head.appendChild(meta);\n    }\n  } catch (err) {}\n}\n\nexport default function addVersionToMetaTag() {\n  setMetaTag('react-scroll-to-bottom:version', process.env.npm_package_version);\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport Composer from './ScrollToBottom/Composer';\nimport Panel from './ScrollToBottom/Panel';\nimport useStyleToClassName from './hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  position: 'relative'\n};\n\nconst BasicScrollToBottomCore = ({ children, className, followButtonClassName, scrollViewClassName }) => {\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')}>\n      <Panel className={(scrollViewClassName || '') + ''}>{children}</Panel>\n      <AutoHideFollowButton className={(followButtonClassName || '') + ''} />\n    </div>\n  );\n};\n\nBasicScrollToBottomCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  followButtonClassName: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottomCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  followButtonClassName: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nconst BasicScrollToBottom = ({\n  checkInterval,\n  children,\n  className,\n  debounce,\n  followButtonClassName,\n  mode,\n  nonce,\n  scrollViewClassName\n}) => {\n  return (\n    <Composer checkInterval={checkInterval} debounce={debounce} mode={mode} nonce={nonce}>\n      <BasicScrollToBottomCore\n        className={className}\n        followButtonClassName={followButtonClassName}\n        scrollViewClassName={scrollViewClassName}\n      >\n        {children}\n      </BasicScrollToBottomCore>\n    </Composer>\n  );\n};\n\nBasicScrollToBottom.defaultProps = {\n  checkInterval: undefined,\n  children: undefined,\n  className: undefined,\n  debounce: undefined,\n  followButtonClassName: undefined,\n  mode: undefined,\n  nonce: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottom.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  debounce: PropTypes.number,\n  followButtonClassName: PropTypes.string,\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nexport default BasicScrollToBottom;\n","import random from 'math-random';\n\nexport default function useCSSKey() {\n  return random()\n    .toString(26)\n    .substr(2, 5)\n    .replace(/\\d/g, value => String.fromCharCode(value.charCodeAt(0) + 65));\n}\n","import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n","export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n      target.addEventListener('wheel', handleCancelAnimation, { passive: true });\n\n      return () => {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return () => cancelAnimationFrame(animator.current);\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAnimating() {\n  const { animating } = useStateContext();\n\n  return [animating];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAnimatingToEnd() {\n  const { animatingToEnd } = useStateContext();\n\n  return [animatingToEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtBottom() {\n  const { atBottom } = useStateContext();\n\n  return [atBottom];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtEnd() {\n  const { atEnd } = useStateContext();\n\n  return [atEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtStart() {\n  const { atStart } = useStateContext();\n\n  return [atStart];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtTop() {\n  const { atTop } = useStateContext();\n\n  return [atTop];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useMode() {\n  const { mode } = useStateContext();\n\n  return [mode];\n}\n","import { useEffect } from 'react';\n\nimport useInternalContext from './internal/useInternalContext';\n\nexport default function useObserveScrollPosition(observer, deps = []) {\n  if (typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!Array.isArray(deps)) {\n    console.error(\n      'react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.'\n    );\n  }\n\n  const { observeScrollPosition } = useInternalContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeScrollPosition(observer), [...deps, observeScrollPosition]);\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollTo() {\n  const { scrollTo } = useFunctionContext();\n\n  return scrollTo;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToBottom() {\n  const { scrollToBottom } = useFunctionContext();\n\n  return scrollToBottom;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToStart() {\n  const { scrollToStart } = useFunctionContext();\n\n  return scrollToStart;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToTop() {\n  const { scrollToTop } = useFunctionContext();\n\n  return scrollToTop;\n}\n","import createEmotion from 'create-emotion';\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo, useRef } from 'react';\n\nimport {\n  useAnimating,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  backgroundColor: '#FFF',\n  boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n  '& > ul': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 10,\n\n    '&:first-child': {\n      paddingBottom: 0\n    },\n\n    '& > li:not(:first-child)': {\n      marginLeft: 4\n    }\n  },\n\n  '& > .badges > li': {\n    alignItems: 'center',\n    backgroundColor: '#DDD',\n    borderRadius: 5,\n    display: 'flex',\n    flex: 1,\n    fontFamily: 'Arial',\n    fontSize: '50%',\n    justifyContent: 'center',\n    padding: '2px 4px',\n    textAlign: 'center',\n\n    '&.lit': {\n      backgroundColor: 'Red',\n      color: 'White'\n    }\n  }\n};\n\nconst CommandBar = ({ nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTopRef = useRef();\n  const [animating] = useAnimating();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n\n  const handleScrollTo100pxClick = useCallback(() => scrollTo(100, { behavior: 'smooth' }), [scrollTo]);\n  const handleScrollToBottomClick = useCallback(() => scrollToBottom({ behavior: 'smooth' }), [scrollToBottom]);\n  const handleScrollToEndClick = useCallback(() => scrollToEnd({ behavior: 'smooth' }), [scrollToEnd]);\n  const handleScrollToStartClick = useCallback(() => scrollToStart({ behavior: 'smooth' }), [scrollToStart]);\n  const handleScrollToTopClick = useCallback(() => scrollToTop({ behavior: 'smooth' }), [scrollToTop]);\n\n  useObserveScrollPosition(\n    ({ scrollTop }) => {\n      const { current } = scrollTopRef;\n\n      // We are directly writing to \"innerText\" for performance reason.\n      if (current) {\n        current.innerText = scrollTop + 'px';\n      }\n    },\n    [scrollTopRef]\n  );\n\n  return (\n    <div className={rootCSS + ''}>\n      <ul className=\"actions\">\n        <li>\n          <button onClick={handleScrollToBottomClick}>Scroll to bottom</button>\n        </li>\n        <li>\n          <button onClick={handleScrollToTopClick}>Scroll to top</button>\n        </li>\n        <li>\n          <button onClick={handleScrollToStartClick}>Scroll to start</button>\n        </li>\n        <li>\n          <button onClick={handleScrollToEndClick}>Scroll to end</button>\n        </li>\n        <li>\n          <button onClick={handleScrollTo100pxClick}>100px</button>\n        </li>\n        <li ref={scrollTopRef}></li>\n      </ul>\n      <ul className=\"badges\">\n        <li className={classNames({ lit: animating })}>ANIMATING</li>\n        <li className={classNames({ lit: atBottom })}>AT BOTTOM</li>\n        <li className={classNames({ lit: atEnd })}>AT END</li>\n        <li className={classNames({ lit: atStart })}>AT START</li>\n        <li className={classNames({ lit: atTop })}>AT TOP</li>\n        <li className={classNames({ lit: mode !== 'top' })}>STICK TO BOTTOM</li>\n        <li className={classNames({ lit: sticky })}>STICKY</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar;\n","import createEmotion from 'create-emotion';\nimport { loremIpsum } from 'lorem-ipsum';\nimport classNames from 'classnames';\nimport Interval from 'react-interval';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ReactScrollToBottom, { StateContext } from 'react-scroll-to-bottom';\n\nimport CommandBar from './CommandBar';\n\nconst FADE_IN_ANIMATION_KEYFRAMES = {\n  '0%': { opacity: 0.2 },\n  '100%': { opacity: 1 }\n};\n\nconst ROOT_STYLE = {\n  '& > ul.button-bar': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n\n    '& > li:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .panes': {\n    display: 'flex',\n\n    '& > *': {\n      flex: 1\n    },\n\n    '& > *:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .version': {\n    bottom: 10,\n    position: 'absolute'\n  }\n};\n\nconst CONTAINER_STYLE = {\n  borderColor: 'Black',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10\n};\n\nconst LARGE_CONTAINER_STYLE = {\n  height: 600\n};\n\nconst SCROLL_VIEW_STYLE = {\n  backgroundColor: '#EEE'\n};\n\nconst SCROLL_VIEW_PADDING_STYLE = {\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  '&:not(.sticky)': {\n    backgroundColor: 'rgba(255, 0, 0, .1)'\n  }\n};\n\nconst SMALL_CONTAINER_STYLE = {\n  height: 300\n};\n\nconst createParagraphs = count => new Array(count).fill().map(() => loremIpsum({ units: 'paragraph' }));\n\nconst App = ({ nonce }) => {\n  const {\n    containerCSS,\n    largeContainerCSS,\n    rootCSS,\n    scrollViewCSS,\n    scrollViewPaddingCSS,\n    smallContainerCSS\n  } = useMemo(() => {\n    const { css, keyframes } = createEmotion({ nonce });\n\n    return {\n      containerCSS: css(CONTAINER_STYLE),\n      largeContainerCSS: css(LARGE_CONTAINER_STYLE),\n      rootCSS: css(ROOT_STYLE),\n      scrollViewCSS: css(SCROLL_VIEW_STYLE),\n      scrollViewPaddingCSS: css({\n        ...SCROLL_VIEW_PADDING_STYLE,\n\n        '& > p': {\n          animation: `${keyframes(FADE_IN_ANIMATION_KEYFRAMES)} 500ms`\n        }\n      }),\n      smallContainerCSS: css(SMALL_CONTAINER_STYLE)\n    };\n  }, [nonce]);\n\n  const [containerSize, setContainerSize] = useState('');\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n  const [loadedVersion] = useState(() =>\n    document.querySelector('head meta[name=\"react-scroll-to-bottom:version\"]').getAttribute('content')\n  );\n\n  const handleAdd = useCallback(count => setParagraphs([...paragraphs, ...createParagraphs(count)]), [\n    paragraphs,\n    setParagraphs\n  ]);\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () => setParagraphs([...paragraphs, 'Button: ' + loremIpsum({ units: 'words' })]),\n    [paragraphs, setParagraphs]\n  );\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(({ target: { checked } }) => setCommandBarVisible(checked), [\n    setCommandBarVisible\n  ]);\n  const handleContainerSizeLarge = useCallback(() => setContainerSize('large'), [setContainerSize]);\n  const handleContainerSizeNormal = useCallback(() => setContainerSize(''), [setContainerSize]);\n  const handleContainerSizeSmall = useCallback(() => setContainerSize('small'), [setContainerSize]);\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) => setIntervalEnabled(intervalEnabled),\n    []\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        containerCSS + '',\n        containerSize === 'small' ? smallContainerCSS + '' : containerSize === 'large' ? largeContainerCSS + '' : ''\n      ),\n    [containerCSS, containerSize, largeContainerCSS, smallContainerCSS]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className={rootCSS + ''}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <label>\n            <input checked={intervalEnabled} onChange={handleIntervalEnabledChange} type=\"checkbox\" />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={commandBarVisible} onChange={handleCommandBarVisibleChange} type=\"checkbox\" />\n            Show command bar\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <ReactScrollToBottom className={containerClassName} nonce=\"a1b2c3d\" scrollViewClassName={scrollViewCSS + ''}>\n          {commandBarVisible && <CommandBar nonce={nonce} />}\n          <StateContext.Consumer>\n            {({ sticky }) => (\n              <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                {paragraphs.map(paragraph => (\n                  <p key={paragraph}>\n                    {paragraph.startsWith('Button: ') ? (\n                      <button type=\"button\">{paragraph.substr(8)}</button>\n                    ) : (\n                      paragraph\n                    )}\n                  </p>\n                ))}\n              </div>\n            )}\n          </StateContext.Consumer>\n          {commandBarVisible && <CommandBar nonce={nonce} />}\n        </ReactScrollToBottom>\n        <ReactScrollToBottom className={containerClassName} mode=\"top\" nonce=\"a1b2c3d\">\n          {commandBarVisible && <CommandBar nonce={nonce} />}\n          <StateContext.Consumer>\n            {({ sticky }) => (\n              <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                {[...paragraphs].reverse().map(paragraph => (\n                  <p key={paragraph}>\n                    {paragraph.startsWith('Button: ') ? (\n                      <button type=\"button\">{paragraph.substr(8)}</button>\n                    ) : (\n                      paragraph\n                    )}\n                  </p>\n                ))}\n              </div>\n            )}\n          </StateContext.Consumer>\n          {commandBarVisible && <CommandBar nonce={nonce} />}\n        </ReactScrollToBottom>\n      </div>\n      <div className=\"version\">\n        <code>react-scroll-to-bottom@{loadedVersion}</code> has loaded.\n      </div>\n      {intervalEnabled && <Interval callback={handleAdd1} enabled={true} timeout={1000} />}\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App nonce=\"a1b2c3d\" />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}