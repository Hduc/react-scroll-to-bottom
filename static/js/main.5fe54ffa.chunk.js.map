{"version":3,"sources":["../../src/index.js","../../src/BasicScrollToBottom.js","../../src/EventSpy.js","../../src/debounce.js","../../src/SpineTo.js","../../../src/hooks/useAnimating.js","../../../src/hooks/useAtBottom.js","../../../src/hooks/useAtEnd.js","../../../src/hooks/useAtStart.js","../../../src/hooks/useAtTop.js","../../../src/hooks/useMode.js","../../../src/hooks/useScrollTo.js","../../../src/hooks/useScrollToBottom.js","../../../src/hooks/useScrollToStart.js","../../../src/hooks/useScrollToTop.js","CommandBar.js","App.js","registerServiceWorker.js","index.js","../../../src/ScrollToBottom/AutoHideFollowButton.js","../../../src/hooks/useScrollToEnd.js","../../../src/hooks/useSticky.js","../../../src/ScrollToBottom/Composer.js","../../../src/ScrollToBottom/InternalContext.js","../../../src/ScrollToBottom/Panel.js","../../../src/ScrollToBottom/StateContext.js","../../../src/ScrollToBottom/FunctionContext.js"],"names":["BasicScrollToBottom","ROOT_CSS","css","position","checkInterval","children","className","debounce","followButtonClassName","mode","scrollViewClassName","undefined","PropTypes","string","EventSpy","name","onEvent","target","onEventRef","debouncer","useCallback","event","current","handleEvent","Date","useLayoutEffect","passive","type","last","timeout","args","now","fn","clearTimeout","setTimeout","Math","ms","squareStepper","to","sign","next","step","from","stepper","index","i","SpineTo","onEnd","value","animator","animate","start","cancelAnimationFrame","requestAnimationFrame","toNumber","nextValue","handleCancelAnimation","isRequired","useContext","StateContext","FunctionContext","backgroundColor","boxShadow","display","listStyleType","margin","padding","paddingBottom","marginLeft","alignItems","borderRadius","flex","fontFamily","fontSize","justifyContent","textAlign","color","CommandBar","useAnimating","animating","useAtBottom","atBottom","useAtEnd","atEnd","useAtStart","atStart","useAtTop","atTop","useMode","useSticky","sticky","scrollTo","useScrollTo","scrollToBottom","useScrollToBottom","scrollToEnd","useScrollToEnd","scrollToStart","useScrollToStart","scrollToTop","useScrollToTop","scrollTo100px","onClick","classNames","lit","FADE_IN_ANIMATION","keyframes","opacity","marginRight","CONTAINER_CSS","borderColor","borderStyle","borderWidth","height","marginTop","LARGE_CONTAINER_CSS","SCROLL_VIEW_CSS","SCROLL_VIEW_PADDING_CSS","paddingLeft","paddingRight","animation","SMALL_CONTAINER_CSS","createParagraphs","count","Array","fill","map","loremIpsum","units","App","useState","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleClear","handleCommandBarVisibleChange","checked","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","containerClassName","useMemo","handleKeyDown","keyCode","window","location","reload","useEffect","addEventListener","removeEventListener","onChange","Consumer","paragraph","key","startsWith","substr","reverse","callback","enabled","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","bottom","cursor","outline","right","width","AutoHideFollowButton","computeViewState","offsetHeight","scrollHeight","scrollTop","Composer","ignoreScrollEventBeforeRef","useRef","setScrollTop","setOffsetHeight","setScrollHeight","setAnimating","setAtBottom","setAtEnd","setAtTop","setAtStart","setSticky","setTarget","stickyButNotAtEndSince","setInterval","clearInterval","handleScroll","timeStampLow","nextOffsetHeight","nextScrollHeight","offsetHeightChanged","scrollHeightChanged","handleScrollEnd","internalContext","stateContext","functionContext","handleFocus","capture","context","overflowY","Panel","InternalContext","ref"],"mappings":"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","file":"static/js/main.5fe54ffa.chunk.js","sourcesContent":["import AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport BasicScrollToBottom from './BasicScrollToBottom';\nimport Composer from './ScrollToBottom/Composer';\nimport FunctionContext from './ScrollToBottom/FunctionContext';\nimport Panel from './ScrollToBottom/Panel';\nimport StateContext from './ScrollToBottom/StateContext';\n\nimport useAnimating from './hooks/useAnimating';\nimport useAtBottom from './hooks/useAtBottom';\nimport useAtEnd from './hooks/useAtEnd';\nimport useAtStart from './hooks/useAtStart';\nimport useAtTop from './hooks/useAtTop';\nimport useMode from './hooks/useMode';\nimport useScrollTo from './hooks/useScrollTo';\nimport useScrollToBottom from './hooks/useScrollToBottom';\nimport useScrollToEnd from './hooks/useScrollToEnd';\nimport useScrollToStart from './hooks/useScrollToStart';\nimport useScrollToTop from './hooks/useScrollToTop';\nimport useSticky from './hooks/useSticky';\n\nexport default BasicScrollToBottom;\n\nexport {\n  AutoHideFollowButton,\n  Composer,\n  FunctionContext,\n  Panel,\n  StateContext,\n  useAnimating,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n};\n","import { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport Composer from './ScrollToBottom/Composer';\nimport Panel from './ScrollToBottom/Panel';\n\nconst ROOT_CSS = css({\n  position: 'relative'\n});\n\nconst BasicScrollToBottom = ({\n  checkInterval,\n  children,\n  className,\n  debounce,\n  followButtonClassName,\n  mode,\n  scrollViewClassName\n}) => (\n  <Composer checkInterval={checkInterval} debounce={debounce} mode={mode}>\n    <div className={classNames(ROOT_CSS + '', (className || '') + '')}>\n      <Panel className={scrollViewClassName}>{children}</Panel>\n      <AutoHideFollowButton className={followButtonClassName} />\n    </div>\n  </Composer>\n);\n\nBasicScrollToBottom.defaultProps = {\n  checkInterval: undefined,\n  children: undefined,\n  className: undefined,\n  debounce: undefined,\n  followButtonClassName: undefined,\n  mode: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottom.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  debounce: PropTypes.number,\n  followButtonClassName: PropTypes.string,\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  scrollViewClassName: PropTypes.string\n};\n\nexport default BasicScrollToBottom;\n","import { useCallback, useLayoutEffect, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useCallback(\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    debounceFn(event => {\n      const { current } = onEventRef;\n\n      current && current(event);\n    }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n","export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n\n      return () => target.removeEventListener('pointerdown', handleCancelAnimation);\n    }\n  }, [animate, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useAnimating() {\n  const context = useContext(StateContext);\n\n  return [context.animating];\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useAtBottom() {\n  const context = useContext(StateContext);\n\n  return [context.atBottom];\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useAtEnd() {\n  const context = useContext(StateContext);\n\n  return [context.atEnd];\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useAtStart() {\n  const context = useContext(StateContext);\n\n  return [context.atStart];\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useAtTop() {\n  const context = useContext(StateContext);\n\n  return [context.atTop];\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useMode() {\n  const context = useContext(StateContext);\n\n  return [context.mode];\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../ScrollToBottom/FunctionContext';\n\nexport default function useScrollTo() {\n  const context = useContext(FunctionContext);\n\n  return context.scrollTo;\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../ScrollToBottom/FunctionContext';\n\nexport default function useScrollToBottom() {\n  const context = useContext(FunctionContext);\n\n  return context.scrollToBottom;\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../ScrollToBottom/FunctionContext';\n\nexport default function useScrollToStart() {\n  const context = useContext(FunctionContext);\n\n  return context.scrollToStart;\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../ScrollToBottom/FunctionContext';\n\nexport default function useScrollToTop() {\n  const context = useContext(FunctionContext);\n\n  return context.scrollToTop;\n}\n","import { css } from 'glamor';\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\n\nimport {\n  useAnimating,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n} from 'react-scroll-to-bottom';\n\nconst ROOT_CSS = css({\n  backgroundColor: '#FFF',\n  boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n  '& > ul': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 10,\n\n    '&:first-child': {\n      paddingBottom: 0\n    },\n\n    '& > li:not(:first-child)': {\n      marginLeft: 4\n    }\n  },\n\n  '& > .badges > li': {\n    alignItems: 'center',\n    backgroundColor: '#DDD',\n    borderRadius: 5,\n    display: 'flex',\n    flex: 1,\n    fontFamily: 'Arial',\n    fontSize: '50%',\n    justifyContent: 'center',\n    padding: '2px 4px',\n    textAlign: 'center',\n\n    '&.lit': {\n      backgroundColor: 'Red',\n      color: 'White'\n    }\n  }\n});\n\nconst CommandBar = () => {\n  const [animating] = useAnimating();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n\n  const scrollTo100px = useCallback(() => scrollTo(100), [scrollTo]);\n\n  return (\n    <div className={ ROOT_CSS + '' }>\n      <ul className=\"actions\">\n        <li>\n          <button onClick={ scrollToBottom }>Scroll to bottom</button>\n        </li>\n        <li>\n          <button onClick={ scrollToTop }>Scroll to top</button>\n        </li>\n        <li>\n          <button onClick={ scrollToStart }>Scroll to start</button>\n        </li>\n        <li>\n          <button onClick={ scrollToEnd }>Scroll to end</button>\n        </li>\n        <li>\n          <button onClick={ scrollTo100px }>100px</button>\n        </li>\n      </ul>\n      <ul className=\"badges\">\n        <li className={ classNames({ lit: animating }) }>ANIMATING</li>\n        <li className={ classNames({ lit: atBottom }) }>AT BOTTOM</li>\n        <li className={ classNames({ lit: atEnd }) }>AT END</li>\n        <li className={ classNames({ lit: atStart }) }>AT START</li>\n        <li className={ classNames({ lit: atTop }) }>AT TOP</li>\n        <li className={ classNames({ lit: mode !== 'top' }) }>STICK TO BOTTOM</li>\n        <li className={ classNames({ lit: sticky }) }>STICKY</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar\n","import { css } from 'glamor';\nimport classNames from 'classnames';\nimport Interval from 'react-interval';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ScrollToEnd, { StateContext } from 'react-scroll-to-bottom';\n\nimport CommandBar from './CommandBar';\n\nconst FADE_IN_ANIMATION = css.keyframes({\n  '0%': { opacity: 0.2 },\n  '100%': { opacity: 1 }\n});\n\nconst ROOT_CSS = css({\n  '& > ul.button-bar': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n\n    '& > li:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .panes': {\n    display: 'flex',\n\n    '& > *': {\n      flex: 1\n    },\n\n    '& > *:not(:last-child)': {\n      marginRight: 10\n    }\n  }\n});\n\nconst CONTAINER_CSS = css({\n  borderColor: 'Black',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10\n});\n\nconst LARGE_CONTAINER_CSS = css({\n  height: 600\n});\n\nconst SCROLL_VIEW_CSS = css({\n  backgroundColor: '#EEE'\n});\n\nconst SCROLL_VIEW_PADDING_CSS = css({\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  '&:not(.sticky)': {\n    backgroundColor: 'rgba(255, 0, 0, .1)'\n  },\n\n  '& > p': {\n    animation: `${FADE_IN_ANIMATION} 500ms`\n  }\n});\n\nconst SMALL_CONTAINER_CSS = css({\n  height: 300\n});\n\nconst createParagraphs = count => new Array(count).fill().map(() => loremIpsum({ units: 'paragraph' }));\n\nconst App = () => {\n  const [containerSize, setContainerSize] = useState('');\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n\n  const handleAdd = useCallback(count => setParagraphs([...paragraphs, ...createParagraphs(count)]), [\n    paragraphs,\n    setParagraphs\n  ]);\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () => setParagraphs([...paragraphs, 'Button: ' + loremIpsum({ units: 'words' })]),\n    [paragraphs, setParagraphs]\n  );\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(({ target: { checked } }) => setCommandBarVisible(checked), [\n    setCommandBarVisible\n  ]);\n  const handleContainerSizeLarge = useCallback(() => setContainerSize('large'), [setContainerSize]);\n  const handleContainerSizeNormal = useCallback(() => setContainerSize(''), [setContainerSize]);\n  const handleContainerSizeSmall = useCallback(() => setContainerSize('small'), [setContainerSize]);\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) => setIntervalEnabled(intervalEnabled),\n    []\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        CONTAINER_CSS + '',\n        containerSize === 'small' ? SMALL_CONTAINER_CSS + '' : containerSize === 'large' ? LARGE_CONTAINER_CSS + '' : ''\n      ),\n    [containerSize]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className={ROOT_CSS + ''}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <label>\n            <input checked={intervalEnabled} onChange={handleIntervalEnabledChange} type=\"checkbox\" />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={commandBarVisible} onChange={handleCommandBarVisibleChange} type=\"checkbox\" />\n            Show command bar\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <ScrollToEnd className={containerClassName} scrollViewClassName={SCROLL_VIEW_CSS + ''}>\n          {commandBarVisible && <CommandBar />}\n          <StateContext.Consumer>\n            {({ sticky }) => (\n              <div className={classNames(SCROLL_VIEW_PADDING_CSS + '', { sticky })}>\n                {paragraphs.map(paragraph => (\n                  <p key={paragraph}>\n                    {paragraph.startsWith('Button: ') ? (\n                      <button type=\"button\">{paragraph.substr(8)}</button>\n                    ) : (\n                      paragraph\n                    )}\n                  </p>\n                ))}\n              </div>\n            )}\n          </StateContext.Consumer>\n          {commandBarVisible && <CommandBar />}\n        </ScrollToEnd>\n        <ScrollToEnd className={containerClassName} mode=\"top\">\n          {commandBarVisible && <CommandBar />}\n          <StateContext.Consumer>\n            {({ sticky }) => (\n              <div className={classNames(SCROLL_VIEW_PADDING_CSS + '', { sticky })}>\n                {[...paragraphs].reverse().map(paragraph => (\n                  <p key={paragraph}>\n                    {paragraph.startsWith('Button: ') ? (\n                      <button type=\"button\">{paragraph.substr(8)}</button>\n                    ) : (\n                      paragraph\n                    )}\n                  </p>\n                ))}\n              </div>\n            )}\n          </StateContext.Consumer>\n          {commandBarVisible && <CommandBar />}\n        </ScrollToEnd>\n      </div>\n      {intervalEnabled && <Interval callback={handleAdd1} enabled={true} timeout={1000} />}\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","import { css } from 'glamor';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useSticky from '../hooks/useSticky';\n\nconst ROOT_CSS = css({\n  backgroundColor: 'rgba(0, 0, 0, .2)',\n  borderRadius: 10,\n  borderWidth: 0,\n  bottom: 5,\n  cursor: 'pointer',\n  height: 20,\n  outline: 0,\n  position: 'absolute',\n  right: 20,\n  width: 20,\n\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n\n  '&:active': {\n    backgroundColor: 'rgba(0, 0, 0, .6)'\n  }\n});\n\nconst AutoHideFollowButton = ({ children, className }) => {\n  const [sticky] = useSticky();\n  const scrollToEnd = useScrollToEnd();\n\n  return (\n    !sticky && (\n      <button className={classNames(ROOT_CSS + '', (className || '') + '')} onClick={scrollToEnd} type=\"button\">\n        {children}\n      </button>\n    )\n  );\n};\n\nAutoHideFollowButton.defaultProps = {\n  children: undefined,\n  className: ''\n};\n\nAutoHideFollowButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default AutoHideFollowButton;\n","import { useContext } from 'react';\n\nimport FunctionContext from '../ScrollToBottom/FunctionContext';\n\nexport default function useScrollToEnd() {\n  const context = useContext(FunctionContext);\n\n  return context.scrollToEnd;\n}\n","import { useContext } from 'react';\n\nimport StateContext from '../ScrollToBottom/StateContext';\n\nexport default function useSticky() {\n  const context = useContext(StateContext);\n\n  return [context.sticky];\n}\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport EventSpy from '../EventSpy';\nimport FunctionContext from './FunctionContext';\nimport InternalContext from './InternalContext';\nimport SpineTo from '../SpineTo';\nimport StateContext from './StateContext';\n\nconst MIN_CHECK_INTERVAL = 17; // 1 frame\nconst MODE_BOTTOM = 'bottom';\nconst MODE_TOP = 'top';\nconst NEAR_END_THRESHOLD = 1;\nconst SCROLL_DECISION_DURATION = 34; // 2 frames\n\nfunction setImmediateInterval(fn, ms) {\n  fn();\n\n  return setInterval(fn, ms);\n}\n\nfunction computeViewState({ mode, target: { offsetHeight, scrollHeight, scrollTop } }) {\n  const atBottom = scrollHeight - scrollTop - offsetHeight < NEAR_END_THRESHOLD;\n  const atTop = scrollTop < NEAR_END_THRESHOLD;\n  const atEnd = mode === MODE_TOP ? atTop : atBottom;\n  const atStart = mode !== MODE_TOP ? atTop : atBottom;\n\n  return {\n    atBottom,\n    atEnd,\n    atStart,\n    atTop\n  };\n}\n\nconst Composer = ({ checkInterval, children, debounce, mode }) => {\n  mode = mode === MODE_TOP ? MODE_TOP : MODE_BOTTOM;\n\n  const ignoreScrollEventBeforeRef = useRef(0);\n  const [scrollTop, setScrollTop] = useState(mode === MODE_TOP ? 0 : '100%');\n\n  // Internal context\n  const [offsetHeight, setOffsetHeight] = useState(0);\n  const [scrollHeight, setScrollHeight] = useState(0);\n\n  // State context\n  const [animating, setAnimating] = useState(false);\n  const [atBottom, setAtBottom] = useState(true);\n  const [atEnd, setAtEnd] = useState(true);\n  const [atTop, setAtTop] = useState(true);\n  const [atStart, setAtStart] = useState(false);\n  const [sticky, setSticky] = useState(true);\n\n  // Function context\n  const scrollTo = useCallback(\n    scrollTop => {\n      setAnimating(true);\n      setScrollTop(scrollTop);\n    },\n    [setAnimating, setScrollTop]\n  );\n\n  const scrollToBottom = useCallback(() => scrollTo('100%'), [scrollTo]);\n  const scrollToTop = useCallback(() => scrollTo(0), [scrollTo]);\n\n  const scrollToEnd = useCallback(() => (mode === MODE_TOP ? scrollToTop() : scrollToBottom()), [\n    mode,\n    scrollToBottom,\n    scrollToTop\n  ]);\n  const scrollToStart = useCallback(() => (mode === MODE_TOP ? scrollToBottom() : scrollToTop()), [\n    mode,\n    scrollToBottom,\n    scrollToTop\n  ]);\n\n  const [target, setTarget] = useState(null);\n\n  useEffect(() => {\n    if (sticky) {\n      let stickyButNotAtEndSince = false;\n\n      const timeout = setImmediateInterval(() => {\n        if (sticky && target && !computeViewState({ mode, target }).atEnd) {\n          if (!stickyButNotAtEndSince) {\n            stickyButNotAtEndSince = Date.now();\n          } else if (Date.now() - stickyButNotAtEndSince > SCROLL_DECISION_DURATION) {\n            // Quirks: In Firefox, after user scroll down, Firefox do two things:\n            //         1. Set to a new \"scrollTop\"\n            //         2. Fire \"scroll\" event\n            //         For what we observed, #1 is fired about 20ms before #2. There is a chance that this stickyCheckTimeout is being scheduled between 1 and 2.\n            //         That means, if we just look at #1 to decide if we should scroll, we will always scroll, in oppose to the user's intention.\n            // Repro: Open Firefox, set checkInterval to a lower number, and try to scroll by dragging the scroll handler. It will jump back.\n\n            !animating && scrollToEnd();\n            stickyButNotAtEndSince = false;\n          }\n        } else {\n          stickyButNotAtEndSince = false;\n        }\n      }, Math.max(MIN_CHECK_INTERVAL, checkInterval) || MIN_CHECK_INTERVAL);\n\n      return () => clearInterval(timeout);\n    }\n  }, [animating, checkInterval, mode, scrollToEnd, sticky, target]);\n\n  const handleScroll = useCallback(\n    ({ timeStampLow }) => {\n      // Currently, there are no reliable way to check if the \"scroll\" event is trigger due to\n      // user gesture, programmatic scrolling, or Chrome-synthesized \"scroll\" event to compensate size change.\n      // Thus, we use our best-effort to guess if it is triggered by user gesture, and disable sticky if it is heading towards the start direction.\n\n      if (timeStampLow <= ignoreScrollEventBeforeRef.current) {\n        // Since we debounce \"scroll\" event, this handler might be called after spineTo.onEnd (a.k.a. artificial scrolling).\n        // We should ignore debounced event fired after scrollEnd, because without skipping them, the userInitiatedScroll calculated below will not be accurate.\n        // Thus, on a fast machine, adding elements super fast will lose the \"stickiness\".\n\n        return;\n      }\n\n      if (target) {\n        const { atBottom, atEnd, atStart, atTop } = computeViewState({ mode, target });\n\n        setAtBottom(atBottom);\n        setAtEnd(atEnd);\n        setAtStart(atStart);\n        setAtTop(atTop);\n\n        // Chrome will emit \"synthetic\" scroll event if the container is resized or an element is added\n        // We need to ignore these \"synthetic\" events\n        // Repro: In playground, press 4-1-5-1-1 (small, add one, normal, add one, add one)\n        //        Nomatter how fast or slow the sequence is being presssed, it should still stick to the bottom\n        const { offsetHeight: nextOffsetHeight, scrollHeight: nextScrollHeight } = target;\n        const offsetHeightChanged = nextOffsetHeight !== offsetHeight;\n        const scrollHeightChanged = nextScrollHeight !== scrollHeight;\n\n        offsetHeightChanged && setOffsetHeight(nextOffsetHeight);\n        scrollHeightChanged && setScrollHeight(nextScrollHeight);\n\n        // Sticky means:\n        // - If it is scrolled programatically, we are still in sticky mode\n        // - If it is scrolled by the user, then sticky means if we are at the end\n\n        // Only update stickiness if the scroll event is not due to synthetic scroll done by Chrome\n        !offsetHeightChanged && !scrollHeightChanged && setSticky(animating || atEnd);\n\n        // If no scrollTop is set (not in programmatic scrolling mode), we should set \"animating\" to false\n        // \"animating\" is used to calculate the \"sticky\" property\n        scrollTop === null && setAnimating(false);\n      }\n    },\n    [\n      animating,\n      ignoreScrollEventBeforeRef,\n      mode,\n      offsetHeight,\n      scrollHeight,\n      scrollTop,\n      setAnimating,\n      setAtBottom,\n      setAtEnd,\n      setAtStart,\n      setAtTop,\n      setOffsetHeight,\n      setScrollHeight,\n      setSticky,\n      target\n    ]\n  );\n\n  const handleScrollEnd = useCallback(() => {\n    ignoreScrollEventBeforeRef.current = Date.now();\n    setAnimating(false);\n    setScrollTop(null);\n  }, [ignoreScrollEventBeforeRef, setScrollTop]);\n\n  const internalContext = useMemo(\n    () => ({\n      offsetHeight,\n      scrollHeight,\n      setTarget\n    }),\n    [offsetHeight, scrollHeight, setTarget]\n  );\n\n  const stateContext = useMemo(\n    () => ({\n      animating,\n      atBottom,\n      atEnd,\n      atStart,\n      atTop,\n      mode,\n      sticky\n    }),\n    [animating, atBottom, atEnd, atStart, atTop, mode, sticky]\n  );\n\n  const functionContext = useMemo(\n    () => ({\n      scrollTo,\n      scrollToBottom,\n      scrollToEnd,\n      scrollToStart,\n      scrollToTop\n    }),\n    [scrollTo, scrollToBottom, scrollToEnd, scrollToStart, scrollToTop]\n  );\n\n  useEffect(() => {\n    // We need to update the \"scrollHeight\" value to latest when the user do a focus inside the box.\n    //\n    // This is because:\n    // - In our code that mitigate Chrome synthetic scrolling, that code will look at whether \"scrollHeight\" value is latest or not.\n    // - That code only run on \"scroll\" event.\n    // - That means, on every \"scroll\" event, if the \"scrollHeight\" value is not latest, we will skip modifying the stickiness.\n    // - That means, if the user \"focus\" to an element that cause the scroll view to scroll to the bottom, the user agent will fire \"scroll\" event.\n    //   Since the \"scrollHeight\" is not latest value, this \"scroll\" event will be ignored and stickiness will not be modified.\n    // - That means, if the user \"focus\" to a newly added element that is at the end of the scroll view, the \"scroll to bottom\" button will continue to show.\n    //\n    // Repro in Chrome:\n    // 1. Fill up a scroll view\n    // 2. Scroll up, the \"scroll to bottom\" button should show up\n    // 3. Click \"Add a button\"\n    // 4. Click on the scroll view (to pseudo-focus on it)\n    // 5. Press TAB, the scroll view will be at the bottom\n    //\n    // Expect:\n    // - The \"scroll to bottom\" button should be gone.\n    if (target) {\n      const handleFocus = () => setScrollHeight(target.scrollHeight);\n\n      target.addEventListener('focus', handleFocus, { capture: true, passive: true });\n\n      return () => target.removeEventListener('focus', handleFocus);\n    }\n  }, [target]);\n\n  return (\n    <InternalContext.Provider value={internalContext}>\n      <FunctionContext.Provider value={functionContext}>\n        <StateContext.Provider value={stateContext}>\n          {children}\n          {target && <EventSpy debounce={debounce} name=\"scroll\" onEvent={handleScroll} target={target} />}\n          {target && scrollTop !== null && (\n            <SpineTo name=\"scrollTop\" onEnd={handleScrollEnd} target={target} value={scrollTop} />\n          )}\n        </StateContext.Provider>\n      </FunctionContext.Provider>\n    </InternalContext.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  checkInterval: 100,\n  children: undefined,\n  debounce: 17,\n  mode: undefined\n};\n\nComposer.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  debounce: PropTypes.number,\n  mode: PropTypes.oneOf(['bottom', 'top'])\n};\n\nexport default Composer;\n","import React from 'react';\n\nconst context = React.createContext({\n  offsetHeight: 0,\n  scrollHeight: 0,\n  setTarget: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomInternalContext';\n\nexport default context;\n","import { css } from 'glamor';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n\nimport InternalContext from './InternalContext';\n\nconst ROOT_CSS = css({\n  height: '100%',\n  overflowY: 'auto',\n  width: '100%'\n});\n\nconst Panel = ({ children, className }) => {\n  const { setTarget } = useContext(InternalContext);\n\n  return (\n    <div className={classNames(ROOT_CSS + '', (className || '') + '')} ref={setTarget}>\n      {children}\n    </div>\n  );\n};\n\nPanel.defaultProps = {\n  children: undefined,\n  className: undefined\n};\n\nPanel.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default Panel;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  atBottom: true,\n  atEnd: true,\n  atTop: true,\n  mode: 'bottom',\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomStateContext';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  scrollTo: () => 0,\n  scrollToBottom: () => 0,\n  scrollToEnd: () => 0,\n  scrollToStart: () => 0,\n  scrollToTop: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomFunctionContext';\n\nexport default context;\n"],"sourceRoot":""}